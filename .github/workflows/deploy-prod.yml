name: ðŸš€ POS Dominican CI/CD Pipeline

env:
  SERVICE_NAME: 'odoo'
  ODOO_VERSION: 'v18'
  K8S_NAMESPACE_DEV: 'pos-sale-dom'

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set build date
        id: set_date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: kmontes2020/${{ env.K8S_NAMESPACE_DEV }}-${{ env.SERVICE_NAME }}-${{ env.ODOO_VERSION }}:${{ github.ref_name }}
          build-args: |
            BUILD_DATE=${{ steps.set_date.outputs.date }}
  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Write OVPN config from secret
        run: |
          echo "${{ secrets.OVPN_CONFIG }}" > ./client.ovpn

      - name: Connect to OpenVPN
        uses: kota65535/github-openvpn-connect-action@v3
        with:
          config_file: ./client.ovpn
          username: "${{ secrets.OVPN_USER }}"
          password: "${{ secrets.OVPN_PASS }}"

      - name: Enable kubectl
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}

      - name: Redeploy
        run: |
          kubectl -n ${{ env.K8S_NAMESPACE_DEV }} patch deployment ${{ env.SERVICE_NAME }}-prod -p "{\"spec\": {\"template\": {\"metadata\": { \"labels\": {  \"redeploy\": \"$(date +%s)\"}}}}}" --insecure-skip-tls-verify
